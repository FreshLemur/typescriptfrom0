Синтаксис надання строгої типізації для вхідних параметрів функції:
    function addTwo(num) {
    return num + 2;
    }
    addTwo(2);

    export {};
    Виведе помилку, тому що ми передаємо рядкове значення.

    Ще один приклад:
        function toUpperCase(val) {
        val.toUpperCase;
        }

        toUpperCase(1);
        В цьому випадку ми використовуємо рядковий метод, а передаємо 1. Логічніше буде дати строгу типізацію аргументу val.
    
    Приклад з строгою типізацією кілька аргументів:
        function signUpUser(name: string, email: string, isPaid: boolean) {}
        signUpUser("", "", false);
        В цьому випадку ми передаємо вже кілька аргументів функції, також є строга типізація.

    Приклад зі строгою типізацією анонімної функції, проте останній аргумент не переданий:
        const loginUser = (name: string, email: string, isPaid: boolean = false) => {};
        loginUser("h", "h.gmail.com");
        Не буде ніяких помилок, тому що серед аргуметів функції ми задали їй значення булеан false.
        Якби ми не задали це значення, то була б помилка.